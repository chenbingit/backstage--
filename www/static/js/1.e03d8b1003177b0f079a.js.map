{"version":3,"sources":["webpack:///src/pages/goods/components/add.vue","webpack:///./src/pages/goods/components/add.vue?5abb","webpack:///./src/pages/goods/components/add.vue","webpack:///src/pages/goods/components/list.vue","webpack:///./src/pages/goods/components/list.vue?5d65","webpack:///./src/pages/goods/components/list.vue","webpack:///src/pages/goods/goods.vue","webpack:///./src/pages/goods/goods.vue?7370","webpack:///./src/pages/goods/goods.vue","webpack:///./node_modules/wangeditor/release/wangEditor.js"],"names":["components_add","props","components","computed","extends_default","Object","vuex_esm","cateList","specList","data","editor","secondCateArr","attrsArr","imageUrl","form","first_cateid","second_cateid","goodsname","price","market_price","img","specsid","specsattr","isnew","ishot","status","description","mounted","this","length","requestCateList","requestSpecList","methods","requestGoodsCount","requestGoodsList","changeFirstCateId","bool","_this","index","findIndex","item","id","children","changeImg","e","file","raw","URL","createObjectURL","changeSpecsId","_this2","attrs","createEditor","wangEditor_default","a","create","txt","html","empty","cancel","info","show","isAdd","add","_this3","stringify_default","request","then","res","code","util_alert","msg","getDetail","_this4","list","$imgPre","JSON","parse","update","_this5","requestList","goods_components_add","render","_vm","_h","$createElement","_c","_self","staticClass","title","visible","on","update:visible","$event","$set","opened","model","label","label-width","change","value","callback","$$v","expression","disabled","_v","_l","key","catename","action","show-file-list","on-change","src","specsname","multiple","active-value","inactive-value","slot","click","type","staticRenderFns","pages_goods_components_add","__webpack_require__","normalizeComponent","ssrContext","total","size","requestTotal","changePage","edit","$emit","del","cPage","components_list","staticStyle","width","prop","scopedSlots","_u","fn","scope","row","alt","confirm","background","layout","page-size","current-change","goods","vAdd","vList","list_normalizeComponent","$refs","goods_goods","ref","goods_Component","goods_normalizeComponent","__webpack_exports__","factory","isDOMList","selector","HTMLCollection","NodeList","eventList","DomElement","div","nodeType","selectorResult","Array","replace","trim","indexOf","document","createElement","innerHTML","result","querySelectorAll","i","$","prototype","constructor","forEach","elem","call","clone","deep","cloneList","push","cloneNode","get","first","last","types","split","addEventListener","target","matches","off","removeEventListener","attr","val","getAttribute","setAttribute","addClass","className","arr","filter","join","removeClass","css","currentStyle","style","resultArr","map","hide","childNodes","append","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","focus","parentUntil","_currentElem","results","equal","$elem","insertBefore","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","config","menus","fontNames","colors","emotions","content","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","test","isIE","window","objForEach","obj","hasOwnProperty","arrForEach","fakeArr","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","_active","onClick","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","reg","_emptyFn","DropList","menu","opt","$container","$title","titleHtml","$list","elemHtml","$li","hideTimeoutId","setTimeout","_rendered","_show","Head","droplist","_command","FontSize","FontName","fontName","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","checkResult","alert","$selectionELem","$parent","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$trs","trLength","tr","locationData","$currentTr","newTr","trData","tdIndex","$currentTd","name","toLowerCase","$table","textValId","width30","width50","width100","delBtn","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","tabsConfig","fileElem","fileList","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","Menus","getPasteText","clipboardData","originalEvent","getData","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","emoticon","table","video","image","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","getChildrenJSON","curElem","elemResult","textContent","tag","attrData","attrList","attributes","attrListLength","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","keyCode","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","codeHandle","txtHtml","ignoreImg","pasteTime","canDo","now","Date","flag","pasteHtml","filterStyle","pasteText","docSplitHtml","getPasteHtml","ex","pasteFiles","items","getAsFile","getPasteImgs","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","UploadImg","_alert","alertInfo","debugInfo","customAlert","Error","onload","onerror","onabort","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","onreadystatechange","readyState","responseText","customInsert","errno","beforeResult","prevent","setRequestHeader","send","reader","readAsDataURL","editorId","Editor","toolbarSelector","textSelector","customConfig","_initConfig","assign","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","_offAllEvent","varArgs","TypeError","to","arguments","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName","wangEditor","module","exports"],"mappings":"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","file":"static/js/1.e03d8b1003177b0f079a.js","sourcesContent":["<template>\r\n  <div class=\"add\">\r\n    <el-dialog :title=\"info.title\" :visible.sync=\"info.show\" @opened=\"createEditor\">\r\n      <el-form :model=\"form\">\r\n        <el-form-item label=\"一级分类\" label-width=\"80px\">\r\n          <el-select v-model=\"form.first_cateid\" @change=\"changeFirstCateId()\">\r\n            <el-option label=\"请选择\" value disabled></el-option>\r\n            <!-- 动态数据 -->\r\n            <el-option\r\n              v-for=\"item in cateList\"\r\n              :key=\"item.id\"\r\n              :label=\"item.catename\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"二级分类\" label-width=\"80px\">\r\n          <el-select v-model=\"form.second_cateid\">\r\n            <el-option label=\"请选择\" value disabled></el-option>\r\n            <!-- 动态数据 -->\r\n            <el-option\r\n              v-for=\"item in secondCateArr\"\r\n              :key=\"item.id\"\r\n              :label=\"item.catename\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"商品名称\" label-width=\"80px\">\r\n          <el-input v-model=\"form.goodsname\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\" label-width=\"80px\">\r\n          <el-input v-model=\"form.price\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"市场价格\" label-width=\"80px\">\r\n          <el-input v-model=\"form.market_price\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"图片\" label-width=\"80px\">\r\n          <el-upload\r\n            class=\"avatar-uploader\"\r\n            action=\"#\"\r\n            :show-file-list=\"false\"\r\n            :on-change=\"changeImg\"\r\n          >\r\n            <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\" />\r\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"商品规格\" label-width=\"80px\">\r\n          <el-select v-model=\"form.specsid\" @change=\"changeSpecsId()\">\r\n            <el-option label=\"请选择\" value disabled></el-option>\r\n            <el-option\r\n              v-for=\"item in specList\"\r\n              :key=\"item.id\"\r\n              :label=\"item.specsname\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"规格属性\" label-width=\"80px\">\r\n          <el-select v-model=\"form.specsattr\" multiple>\r\n            <el-option label=\"请选择\" value></el-option>\r\n            <!-- 动态数据 -->\r\n            <el-option v-for=\"item in attrsArr\" :key=\"item\" :label=\"item\" :value=\"item\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"是否新品\" label-width=\"80px\">\r\n          <el-radio v-model=\"form.isnew\" :label=\"1\">是</el-radio>\r\n          <el-radio v-model=\"form.isnew\" :label=\"2\">否</el-radio>\r\n        </el-form-item>\r\n        <el-form-item label=\"是否热卖\" label-width=\"80px\">\r\n          <el-radio v-model=\"form.ishot\" :label=\"1\">是</el-radio>\r\n          <el-radio v-model=\"form.ishot\" :label=\"2\">否</el-radio>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"状态\" label-width=\"80px\">\r\n          <el-switch v-model=\"form.status\" :active-value=\"1\" :inactive-value=\"2\"></el-switch>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"商品描述\" label-width=\"80px\">\r\n          <div id=\"desc\"></div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"cancel()\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"add\" v-if=\"info.isAdd\">添 加</el-button>\r\n        <el-button type=\"primary\" @click=\"update\" v-else>修 改</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapGetters, mapActions } from \"vuex\";\r\nimport {\r\n  requestGoodsAdd,\r\n  requestGoodsDetail,\r\n  requestGoodsUpdate,\r\n} from \"../../../util/request\";\r\nimport { successAlert, warningAlert } from \"../../../util/alert\";\r\nimport E from \"wangeditor\";\r\nexport default {\r\n  props: [\"info\"],\r\n  components: {},\r\n  computed: {\r\n    ...mapGetters({\r\n      //分类的一级列表\r\n      cateList: \"cate/list\",\r\n      //规格列表\r\n      specList: \"spec/list\",\r\n    }),\r\n  },\r\n  data() {\r\n    return {\r\n      //编辑器对象\r\n      editor:null,\r\n      //二级分类的数组\r\n      secondCateArr: [],\r\n      //商品规格属性值\r\n      attrsArr: [],\r\n      //图片地址\r\n      imageUrl: \"\",\r\n      //提交给后端的数据\r\n      form: {\r\n        first_cateid: \"\",\r\n        second_cateid: \"\",\r\n        goodsname: \"\",\r\n        price: 0,\r\n        market_price: 0,\r\n        img: null,\r\n        specsid: \"\",\r\n        specsattr: [],\r\n        isnew: 1,\r\n        ishot: 1,\r\n        status: 1,\r\n        description: \"\",\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    if (this.cateList.length == 0) {\r\n      this.requestCateList();\r\n    }\r\n    //获取所有的规格数据\r\n    this.requestSpecList(true);\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      //获取分类列表\r\n      requestCateList: \"cate/requestList\",\r\n      //获取规格列表\r\n      requestSpecList: \"spec/requestList\",\r\n      //获取商品总数\r\n      requestGoodsCount:\"goods/requestTotal\",\r\n       //获取商品列表\r\n      requestGoodsList: \"goods/requestList\",\r\n    }),\r\n\r\n    //修改了一级分类\r\n    changeFirstCateId(bool) {\r\n      let index = this.cateList.findIndex(\r\n        (item) => item.id == this.form.first_cateid\r\n      );\r\n      this.secondCateArr = this.cateList[index].children;\r\n      //传了true,second_cateid就不置空；没传就置空\r\n      if(!bool){\r\n         this.form.second_cateid = \"\";\r\n      }\r\n     \r\n    },\r\n    //图片发生了修改\r\n    changeImg(e) {\r\n      let file = e.raw;\r\n      this.imageUrl = URL.createObjectURL(file);\r\n      this.form.img = file;\r\n    },\r\n\r\n    //商品规格发生了改变\r\n    changeSpecsId(bool) {\r\n      let index = this.specList.findIndex(\r\n        (item) => item.id == this.form.specsid\r\n      );\r\n\r\n      this.attrsArr = this.specList[index].attrs;\r\n      if(!bool){\r\n        this.form.specsattr = [];\r\n      }\r\n      \r\n    },\r\n    //创建编辑器\r\n    createEditor() {\r\n      this.editor = new E(\"#desc\");\r\n      this.editor.create();\r\n      this.editor.txt.html(this.form.description)\r\n    },\r\n\r\n    //置空\r\n    empty() {\r\n      //二级分类的数组\r\n      this.secondCateArr= []\r\n      //商品规格属性值\r\n      this.attrsArr=[]\r\n      //图片地址\r\n      this.imageUrl= \"\"\r\n      //提交给后端的数据\r\n      this.form={\r\n        first_cateid: \"\",\r\n        second_cateid: \"\",\r\n        goodsname: \"\",\r\n        price: 0,\r\n        market_price: 0,\r\n        img: null,\r\n        specsid: \"\",\r\n        specsattr: [],\r\n        isnew: 1,\r\n        ishot: 1,\r\n        status: 1,\r\n        description: \"\",\r\n      }\r\n      this.editor.txt.html('')\r\n\r\n    },\r\n    //取消\r\n    cancel() {\r\n      this.info.show = false;\r\n      if (!this.info.isAdd) {\r\n        this.empty();\r\n      }\r\n    },\r\n    //添加\r\n    add() {\r\n     \r\n      this.form.description=this.editor.txt.html();\r\n      this.form.specsattr=JSON.stringify(this.form.specsattr)\r\n\r\n      //发起添加请求\r\n      requestGoodsAdd(this.form).then((res) => {\r\n        if (res.data.code == 200) {\r\n          successAlert(res.data.msg);\r\n          //清空\r\n          this.empty();\r\n          //弹框消失\r\n          this.cancel();\r\n          // //重新获取角色列表数据\r\n          this.requestGoodsCount();\r\n          // //重新获取总的数量\r\n          this.requestGoodsList();\r\n        } else {\r\n          warningAlert(res.data.msg);\r\n        }\r\n      });\r\n    },\r\n    //获取一条数据\r\n    getDetail(id) {\r\n      //ajax\r\n      requestGoodsDetail({ id: id }).then((res) => {\r\n        // console.log(res.data)\r\n        this.form=res.data.list;\r\n        this.form.id=id;\r\n        this.imageUrl=this.$imgPre+this.form.img;\r\n        //根据一级分类计算出二级分类的数组\r\n        this.changeFirstCateId(true)\r\n        //根据商品规格计算出商品属性\r\n        this.changeSpecsId(true)\r\n        this.form.specsattr=JSON.parse(this.form.specsattr)\r\n        \r\n      });\r\n    },\r\n    //点击了修改\r\n    update() {\r\n       this.form.description=this.editor.txt.html();\r\n      this.form.specsattr=JSON.stringify(this.form.specsattr)\r\n\r\n      requestGoodsUpdate(this.form).then((res) => {\r\n        if (res.data.code == 200) {\r\n          successAlert(\"修改成功\");\r\n          this.empty();\r\n          this.cancel();\r\n          this.requestList();\r\n        } else {\r\n          warningAlert(res.data.msg);\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped lang=\"stylus\">\r\n.add >>> .el-form-item__content {\r\n  display: flex !important;\r\n}\r\n\r\n.add >>> .el-input {\r\n  flex: 1;\r\n}\r\n\r\n.add >>> .el-button {\r\n  width: auto;\r\n}\r\n\r\n// 穿透\r\n.add >>> .el-upload {\r\n  border: 1px dashed #d9d9d9 !important;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.add >>> .el-upload:hover {\r\n  border: 1px dashed #409eff !important;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n}\r\n\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/goods/components/add.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"add\"},[_c('el-dialog',{attrs:{\"title\":_vm.info.title,\"visible\":_vm.info.show},on:{\"update:visible\":function($event){return _vm.$set(_vm.info, \"show\", $event)},\"opened\":_vm.createEditor}},[_c('el-form',{attrs:{\"model\":_vm.form}},[_c('el-form-item',{attrs:{\"label\":\"一级分类\",\"label-width\":\"80px\"}},[_c('el-select',{on:{\"change\":function($event){return _vm.changeFirstCateId()}},model:{value:(_vm.form.first_cateid),callback:function ($$v) {_vm.$set(_vm.form, \"first_cateid\", $$v)},expression:\"form.first_cateid\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\",\"disabled\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.cateList),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.catename,\"value\":item.id}})})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"二级分类\",\"label-width\":\"80px\"}},[_c('el-select',{model:{value:(_vm.form.second_cateid),callback:function ($$v) {_vm.$set(_vm.form, \"second_cateid\", $$v)},expression:\"form.second_cateid\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\",\"disabled\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.secondCateArr),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.catename,\"value\":item.id}})})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"商品名称\",\"label-width\":\"80px\"}},[_c('el-input',{model:{value:(_vm.form.goodsname),callback:function ($$v) {_vm.$set(_vm.form, \"goodsname\", $$v)},expression:\"form.goodsname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"价格\",\"label-width\":\"80px\"}},[_c('el-input',{model:{value:(_vm.form.price),callback:function ($$v) {_vm.$set(_vm.form, \"price\", $$v)},expression:\"form.price\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"市场价格\",\"label-width\":\"80px\"}},[_c('el-input',{model:{value:(_vm.form.market_price),callback:function ($$v) {_vm.$set(_vm.form, \"market_price\", $$v)},expression:\"form.market_price\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"图片\",\"label-width\":\"80px\"}},[_c('el-upload',{staticClass:\"avatar-uploader\",attrs:{\"action\":\"#\",\"show-file-list\":false,\"on-change\":_vm.changeImg}},[(_vm.imageUrl)?_c('img',{staticClass:\"avatar\",attrs:{\"src\":_vm.imageUrl}}):_c('i',{staticClass:\"el-icon-plus avatar-uploader-icon\"})])],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"商品规格\",\"label-width\":\"80px\"}},[_c('el-select',{on:{\"change\":function($event){return _vm.changeSpecsId()}},model:{value:(_vm.form.specsid),callback:function ($$v) {_vm.$set(_vm.form, \"specsid\", $$v)},expression:\"form.specsid\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\",\"disabled\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.specList),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.specsname,\"value\":item.id}})})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"规格属性\",\"label-width\":\"80px\"}},[_c('el-select',{attrs:{\"multiple\":\"\"},model:{value:(_vm.form.specsattr),callback:function ($$v) {_vm.$set(_vm.form, \"specsattr\", $$v)},expression:\"form.specsattr\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.attrsArr),function(item){return _c('el-option',{key:item,attrs:{\"label\":item,\"value\":item}})})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"是否新品\",\"label-width\":\"80px\"}},[_c('el-radio',{attrs:{\"label\":1},model:{value:(_vm.form.isnew),callback:function ($$v) {_vm.$set(_vm.form, \"isnew\", $$v)},expression:\"form.isnew\"}},[_vm._v(\"是\")]),_vm._v(\" \"),_c('el-radio',{attrs:{\"label\":2},model:{value:(_vm.form.isnew),callback:function ($$v) {_vm.$set(_vm.form, \"isnew\", $$v)},expression:\"form.isnew\"}},[_vm._v(\"否\")])],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"是否热卖\",\"label-width\":\"80px\"}},[_c('el-radio',{attrs:{\"label\":1},model:{value:(_vm.form.ishot),callback:function ($$v) {_vm.$set(_vm.form, \"ishot\", $$v)},expression:\"form.ishot\"}},[_vm._v(\"是\")]),_vm._v(\" \"),_c('el-radio',{attrs:{\"label\":2},model:{value:(_vm.form.ishot),callback:function ($$v) {_vm.$set(_vm.form, \"ishot\", $$v)},expression:\"form.ishot\"}},[_vm._v(\"否\")])],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"状态\",\"label-width\":\"80px\"}},[_c('el-switch',{attrs:{\"active-value\":1,\"inactive-value\":2},model:{value:(_vm.form.status),callback:function ($$v) {_vm.$set(_vm.form, \"status\", $$v)},expression:\"form.status\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"商品描述\",\"label-width\":\"80px\"}},[_c('div',{attrs:{\"id\":\"desc\"}})])],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){return _vm.cancel()}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),(_vm.info.isAdd)?_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.add}},[_vm._v(\"添 加\")]):_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.update}},[_vm._v(\"修 改\")])],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-f6ccc492\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/goods/components/add.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-f6ccc492\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!stylus-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./add.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./add.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./add.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-f6ccc492\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./add.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-f6ccc492\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/goods/components/add.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div>\r\n    <el-table :data=\"list\" style=\"width: 100%\">\r\n      <el-table-column prop=\"id\" label=\"商品编号\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"goodsname\" label=\"商品名称\" width=\"180\"></el-table-column>\r\n      <el-table-column label=\"图片\" width=\"180\">\r\n        <template slot-scope=\"scope\">\r\n            <img :src=\"$imgPre+scope.row.img\" alt=\"\">\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"是否新品\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button v-if=\"scope.row.isnew==1\" type=\"primary\">是</el-button>\r\n          <el-button v-else type=\"info\">否</el-button>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"是否热卖\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button v-if=\"scope.row.ishot==1\" type=\"primary\">是</el-button>\r\n          <el-button v-else type=\"info\">否</el-button>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"状态\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button v-if=\"scope.row.status==1\" type=\"primary\">启用</el-button>\r\n          <el-button v-else type=\"info\">禁用</el-button>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"primary\" @click=\"edit(scope.row.id)\">编辑</el-button>\r\n          <del-btn @confirm=\"del(scope.row.id)\"></del-btn>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n\r\n    <el-pagination\r\n      background\r\n      layout=\"prev, pager, next\"\r\n      @current-change=\"cPage\"\r\n      :page-size=\"size\"\r\n      :total=\"total\"\r\n    ></el-pagination>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapGetters, mapActions } from \"vuex\";\r\nimport { requestGoodsDelete } from \"../../../util/request\";\r\nimport { successAlert, warningAlert } from \"../../../util/alert\";\r\nexport default {\r\n  components: {},\r\n  computed: {\r\n    ...mapGetters({\r\n      list: \"goods/list\",\r\n      total: \"goods/total\",\r\n      size: \"goods/size\",\r\n    }),\r\n  },\r\n  data() {\r\n    return {};\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      requestList: \"goods/requestList\",\r\n      requestTotal: \"goods/requestTotal\",\r\n      changePage: \"goods/changePage\",\r\n    }),\r\n    edit(id) {\r\n      this.$emit(\"edit\", id);\r\n    },\r\n    //删除\r\n    del(id) {\r\n      requestGoodsDelete({ id: id }).then((res) => {\r\n        if (res.data.code == 200) {\r\n          successAlert(\"删除成功\");\r\n\r\n          this.requestList();\r\n          this.requestTotal();\r\n        } else {\r\n          warningAlert(res.data.msg);\r\n        }\r\n      });\r\n    },\r\n    //修改页码\r\n    cPage(a) {\r\n      this.changePage(a);\r\n      this.requestList();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.requestTotal();\r\n    this.requestList();\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\nimg{\r\n  width: 80px;\r\n  height: 80px;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/goods/components/list.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.list}},[_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":\"商品编号\",\"width\":\"180\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"goodsname\",\"label\":\"商品名称\",\"width\":\"180\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"图片\",\"width\":\"180\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('img',{attrs:{\"src\":_vm.$imgPre+scope.row.img,\"alt\":\"\"}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"是否新品\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isnew==1)?_c('el-button',{attrs:{\"type\":\"primary\"}},[_vm._v(\"是\")]):_c('el-button',{attrs:{\"type\":\"info\"}},[_vm._v(\"否\")])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"是否热卖\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.ishot==1)?_c('el-button',{attrs:{\"type\":\"primary\"}},[_vm._v(\"是\")]):_c('el-button',{attrs:{\"type\":\"info\"}},[_vm._v(\"否\")])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"状态\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.status==1)?_c('el-button',{attrs:{\"type\":\"primary\"}},[_vm._v(\"启用\")]):_c('el-button',{attrs:{\"type\":\"info\"}},[_vm._v(\"禁用\")])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.edit(scope.row.id)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('del-btn',{on:{\"confirm\":function($event){return _vm.del(scope.row.id)}}})]}}])})],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"background\":\"\",\"layout\":\"prev, pager, next\",\"page-size\":_vm.size,\"total\":_vm.total},on:{\"current-change\":_vm.cPage}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3a8665dc\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/goods/components/list.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3a8665dc\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./list.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./list.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./list.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3a8665dc\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./list.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3a8665dc\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/goods/components/list.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div>\r\n    <el-button type=\"primary\" @click=\"add\">添加</el-button>\r\n\r\n    <!-- 添加弹框 -->\r\n    <v-add :info=\"info\" ref=\"add\"></v-add>\r\n\r\n    <!-- 列表 -->\r\n    <v-list @edit=\"edit($event)\"></v-list>\r\n  </div>\r\n</template>\r\n<script>\r\nimport vAdd from \"./components/add\";\r\nimport vList from \"./components/list\";\r\nexport default {\r\n  components: {\r\n    vAdd,\r\n    vList,\r\n  },\r\n  data() {\r\n    return {\r\n      info: {\r\n        show: false,\r\n        title: \"添加商品\",\r\n        isAdd: true,\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    //点击了添加按钮\r\n    add() {\r\n      this.info.show = true;\r\n      this.info.title = \"添加商品\";\r\n      this.info.isAdd = true;\r\n    },\r\n    //点击了编辑\r\n    edit(id) {\r\n      this.info.show = true;\r\n      this.info.title = \"编辑商品\";\r\n      this.info.isAdd = false;\r\n      this.$refs.add.getDetail(id);\r\n    },\r\n  },\r\n  mounted() {},\r\n};\r\n</script>\r\n<style scoped>\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/goods/goods.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.add}},[_vm._v(\"添加\")]),_vm._v(\" \"),_c('v-add',{ref:\"add\",attrs:{\"info\":_vm.info}}),_vm._v(\" \"),_c('v-list',{on:{\"edit\":function($event){return _vm.edit($event)}}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-781b0f56\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/goods/goods.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-781b0f56\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./goods.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./goods.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./goods.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-781b0f56\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./goods.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-781b0f56\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/goods/goods.vue\n// module id = null\n// module chunks = ","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // clone\n    clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n            cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                });\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                });\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.childNodes);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n};\n\n// new 一个对象\nfunction $(selector) {\n    return new DomElement(selector);\n}\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n};\n\n// 遍历对象\nfunction objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n}\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\nfunction isFunction(fn) {\n    return typeof fn === 'function';\n}\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    替换多语言\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $li.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - fontSize\n*/\n\n// 构造函数\nfunction FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>字号</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span style=\"font-size: x-small;\">x-small</span>'), value: '1' }, { $elem: $('<span style=\"font-size: small;\">small</span>'), value: '2' }, { $elem: $('<span>normal</span>'), value: '3' }, { $elem: $('<span style=\"font-size: large;\">large</span>'), value: '4' }, { $elem: $('<span style=\"font-size: x-large;\">x-large</span>'), value: '5' }, { $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontSize 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontSize.prototype = {\n    constructor: FontSize,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontSize', value);\n    }\n};\n\n/*\n    menu - fontName\n*/\n\n// 构造函数\nfunction FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 获取配置的字体\n    var config = editor.config;\n    var fontNames = config.fontNames || [];\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>字体</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: fontNames.map(function (fontName) {\n            return { $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'), value: fontName };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontName 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontName.prototype = {\n    constructor: FontName,\n\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontName', value);\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - Forecolor\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - BackColor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                editor.cmd.do('formatBlock', '<P>');\n            } else {\n                // 转换为 quote\n                editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            }\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n        var content = void 0,\n            $targetELem = void 0;\n        if (nodeName === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config;\n        // 获取表情配置\n        var emotions = config.emotions || [];\n\n        // 创建表情 dropPanel 的配置\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n            var emotType = emotData.type;\n            var content = emotData.content || [];\n\n            // 这一组表情最终拼接出来的 html\n            var faceHtml = '';\n\n            // emoji 表情\n            if (emotType === 'emoji') {\n                content.forEach(function (item) {\n                    if (item) {\n                        faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                    }\n                });\n            }\n            // 图片表情\n            if (emotType === 'image') {\n                content.forEach(function (item) {\n                    var src = item.src;\n                    var alt = item.alt;\n                    if (src) {\n                        // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                        faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                    }\n                });\n            }\n\n            tabConfig.push({\n                title: emotData.title,\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        var $target = $(target);\n                        var nodeName = $target.getNodeName();\n\n                        var insertHtml = void 0;\n                        if (nodeName === 'IMG') {\n                            // 插入图片\n                            insertHtml = $target.parent().html();\n                        } else {\n                            // 插入 emoji\n                            insertHtml = '<span>' + $target.html() + '</span>';\n                        }\n\n                        _this._insert(insertHtml);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            });\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: tabConfig\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }]\n        } // second tab end\n        ]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.fontSize = FontSize;\n\nMenuConstructors.fontName = FontName;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n    // 过滤 data-xxx 属性\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n        // 忽略图片\n        pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n            elemResult = replaceHtmlSymbol(elemResult);\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var html = void 0;\n        if (val == null) {\n            html = $textElem.html();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            html = html.replace(/\\u200b/gm, '');\n            return html;\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 JSON\n    getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var text = void 0;\n        if (val == null) {\n            text = $textElem.text();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            text = text.replace(/\\u200b/gm, '');\n            return text;\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n\n            if ($parentElem.html() === '<code><br></code>') {\n                // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                // 而且继续回车跳不出去，因此只能特殊处理\n                insertEmptyP($selectionElem);\n                return;\n            }\n\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var ignoreImg = config.pasteIgnoreImg;\n        var $textElem = editor.$textElem;\n\n        // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n        var pasteTime = 0;\n        function canDo() {\n            var now = Date.now();\n            var flag = false;\n            if (now - pasteTime >= 100) {\n                // 间隔大于 100 ms ，可以执行\n                flag = true;\n            }\n            pasteTime = now;\n            return flag;\n        }\n        function resetTime() {\n            pasteTime = 0;\n        }\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                // 没有内容，可继续执行下面的图片粘贴\n                resetTime();\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                }\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            if ($img.attr('data-w-e') === '1') {\n                // 是表情图片，忽略\n                return;\n            }\n\n            // 记录当前点击过的图片\n            editor._selectedImg = $img;\n\n            // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n            editor.selection.createRangeByElem($img);\n            editor.selection.restoreSelection();\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 删除记录\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 使用 styleWithCSS\n        if (!editor._useStyleWithCSS) {\n            document.execCommand('styleWithCSS', null, true);\n            editor._useStyleWithCSS = true;\n        }\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n\n        // 判断选区内容是否在不可编辑区域之内\n        if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n            return;\n        }\n\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    上传进度条\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n\n        // 校验格式\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult = void 0;\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n            checkResult = linkImgCheck(link);\n            if (typeof checkResult === 'string') {\n                // 校验失败，提示信息\n                alert(checkResult);\n                return;\n            }\n        }\n\n        editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1024 / 1024;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n            // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n            if (!uploadImgServer && !uploadImgShowBase64) {\n                return;\n            }\n        }\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n                // val = encodeURIComponent(val)\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgParamsWithUrl) {\n                    if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n                }\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 记录输入法的开始和结束\n        var compositionEnd = true;\n        $textContainerElem.on('compositionstart', function () {\n            // 输入法开始输入\n            compositionEnd = false;\n        });\n        $textContainerElem.on('compositionend', function () {\n            // 输入法结束输入\n            compositionEnd = true;\n        });\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            // 输入法结束才出发 onchange\n            compositionEnd && _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 onfocus 与 onblur 事件\n        if (config$$1.onfocus || config$$1.onblur) {\n            // 当前编辑器是否是焦点状态\n            this.isFocus = false;\n\n            $(document).on('click', function (e) {\n                //判断当前点击元素是否在编辑器内\n                var isChild = $textElem.isContain($(e.target));\n\n                //判断当前点击元素是否为工具栏\n                var isToolbar = $toolbarElem.isContain($(e.target));\n                var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n                if (!isChild) {\n                    //若为选择工具栏中的功能，则不视为成blur操作\n                    if (isToolbar && !isMenu) {\n                        return;\n                    }\n\n                    if (_this.isFocus) {\n                        _this.onblur && _this.onblur();\n                    }\n                    _this.isFocus = false;\n                } else {\n                    if (!_this.isFocus) {\n                        _this.onfocus && _this.onfocus();\n                    }\n                    _this.isFocus = true;\n                }\n            });\n        }\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n\n        // onchange 触发延迟时间\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n            onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    // 需要比较每一个字符\n                    if (currentHtml === beforeChangeHtml) {\n                        return;\n                    }\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, onchangeTimeout);\n            };\n        }\n\n        // -------- 绑定 onblur 事件 --------\n        var onblur = config$$1.onblur;\n        if (onblur && typeof onblur === 'function') {\n            this.onblur = function () {\n                var currentHtml = this.txt.html();\n                onblur(currentHtml);\n            };\n        }\n\n        // -------- 绑定 onfocus 事件 --------\n        var onfocus = config$$1.onfocus;\n        if (onfocus && typeof onfocus === 'function') {\n            this.onfocus = function () {\n                onfocus();\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n        $.offAll();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wangeditor/release/wangEditor.js\n// module id = sYY+\n// module chunks = 1"],"sourceRoot":""}